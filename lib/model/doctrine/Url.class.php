<?php

/**
 * Url
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    Encurtador
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Url extends BaseUrl {

    public function getFullUrl() {
        return sfContext::getInstance()->getController()->genUrl('@resolve_url?url_id=' . $this->getShortUrl(), true);
    }

    public function getTotal() {
        
        $pdo = Doctrine_Manager::getInstance()->getCurrentConnection();
        $query = "SELECT count( * ) as numresult
                    FROM (
                        SELECT c.ipuser
                        FROM  url_controle c
                        WHERE c.url_id =:url_id
                        GROUP BY c.ipuser, date_format( c.created_at, '%d/%m/%Y' )
                    ) AS querycount";

        $stmt = $pdo->prepare($query);
        
        $params = array(
            "url_id" => $this->getId()
        );

        $stmt->execute($params);

        $results = $stmt->fetchAll();
        
        return (count($results)) ? $results[0]['numresult'] : 0;
    }

    public function getTotalDisponivel() {
        
        $pdo = Doctrine_Manager::getInstance()->getCurrentConnection();
        $query = "SELECT count( * ) as numresult
                    FROM (
                        SELECT c.ipuser
                        FROM  url_controle c
                        WHERE c.url_id =:url_id
                        GROUP BY c.ipuser, date_format( c.created_at, '%d/%m/%Y' )
                        HAVING SUM(is_rescued) = 0
                    ) AS querycount";

        $stmt = $pdo->prepare($query);
        
        $params = array(
            "url_id" => $this->getId()
        );

        $stmt->execute($params);

        $results = $stmt->fetchAll();
        
        return (count($results)) ? $results[0]['numresult'] : 0;
    }

    public function getGanhos() {
        return number_format($this->getTotal() * CustoClique::getCustoPorClique(), 2, ',', '.');
    }

    public function getGanhosDisponivel() {
        return number_format($this->getTotalDisponivel() * CustoClique::getCustoPorClique(), 2, ',', '.');
    }

    public static function getGanhosDisponivelDoUsuario(sfGuardUser $usuario) {
        $pdo = Doctrine_Manager::getInstance()->getCurrentConnection();
        $query = "SELECT count( * ) as numresult
                    FROM (
                        SELECT c.ipuser, date_format( c.created_at, '%d/%m/%Y' ) created_at
                        FROM url u
                        INNER JOIN url_controle c ON ( u.id = c.url_id )
                        WHERE u.user_id =:user_id
                        GROUP BY c.ipuser, c.url_id, date_format( c.created_at, '%d/%m/%Y' )
                        HAVING SUM(c.is_rescued) = 0
                    ) AS querycount";

        $stmt = $pdo->prepare($query);

        $params = array(
            "user_id" => $usuario->getId()
        );

        $stmt->execute($params);

        $results = $stmt->fetchAll();
        $num = ((count($results)) ? $results[0]['numresult'] : 0) * CustoClique::getCustoPorClique();
        
        return $num;
    }

    public static function getTotalAcessoByUser(sfGuardUser $usuario) {
        $pdo = Doctrine_Manager::getInstance()->getCurrentConnection();
        $query = "SELECT count( * ) as numresult
                    FROM (
                        SELECT c.ipuser, date_format( c.created_at, '%d/%m/%Y' ) created_at
                        FROM url u
                        INNER JOIN url_controle c ON ( u.id = c.url_id )
                        WHERE u.user_id =:user_id
                        GROUP BY c.ipuser, c.url_id, date_format( c.created_at, '%d/%m/%Y' )
                    ) AS querycount";

        $stmt = $pdo->prepare($query);

        $params = array(
            "user_id" => $usuario->getId()
        );

        $stmt->execute($params);

        $results = $stmt->fetchAll();
        $num = (count($results)) ? $results[0]['numresult'] : 0;
        
        return $num;
    }

    public static function getTotalAcessoByUserDisponivelReferencia(sfGuardUser $usuario) {
        $pdo = Doctrine_Manager::getInstance()->getCurrentConnection();
        $query = "SELECT count( * ) as numresult
                    FROM (
                        SELECT c.ipuser, date_format( c.created_at, '%d/%m/%Y' ) created_at
                        FROM url u
                        INNER JOIN url_controle c ON ( u.id = c.url_id )
                        WHERE u.user_id =:user_id
                        GROUP BY c.ipuser, c.url_id, date_format( c.created_at, '%d/%m/%Y' )
                        HAVING SUM(c.is_referal_rescued) = 0
                    ) AS querycount";

        $stmt = $pdo->prepare($query);

        $params = array(
            "user_id" => $usuario->getId()
        );

        $stmt->execute($params);

        $results = $stmt->fetchAll();
        $num = (count($results)) ? $results[0]['numresult'] : 0;
        
        return $num;
    }

    public function atualizaControleNaoResgatado(Resgate $resgate, Url $url) {
        Doctrine_Query::create()
                ->update('UrlControle')
                ->set('resgate_id', $resgate->getId())
                ->set('is_rescued', 1)
                ->where('url_id = ?', $url->getId())
                ->addWhere('is_rescued <> ?', 1)
                ->execute();
    }

    public function atualizaControleReferenciaNaoResgatado(Resgate $resgate, Url $url) {
        Doctrine_Query::create()
                ->update('UrlControle')
                ->set('resgate_referal_id', $resgate->getId())
                ->set('is_referal_rescued', 1)
                ->where('url_id = ?', $url->getId())
                ->addWhere('is_referal_rescued <> ?', 1)
                ->execute();
    }

}